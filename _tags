# OASIS_START
# DO NOT EDIT (digest: 9e91298a61ed04c722f0d66d6e02ef02)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library aws
"src/aws.cmxs": use_aws
<src/*.ml{,i}>: pkg_lwt
<src/*.ml{,i}>: pkg_lwt.syntax
<src/*.ml{,i}>: pkg_cryptokit
<src/*.ml{,i}>: pkg_calendar
<src/*.ml{,i}>: pkg_xmlm
<src/*.ml{,i}>: pkg_lwt.unix
<src/*.ml{,i}>: pkg_yojson
<src/*.ml{,i}>: pkg_re.pcre
<src/*.ml{,i}>: pkg_uri
# Library cohttp
"src/cohttp/cohttp.cmxs": use_cohttp
<src/cohttp/*.ml{,i}>: use_aws
<src/cohttp/*.ml{,i}>: pkg_lwt
<src/cohttp/*.ml{,i}>: pkg_lwt.syntax
<src/cohttp/*.ml{,i}>: pkg_cryptokit
<src/cohttp/*.ml{,i}>: pkg_calendar
<src/cohttp/*.ml{,i}>: pkg_xmlm
<src/cohttp/*.ml{,i}>: pkg_lwt.unix
<src/cohttp/*.ml{,i}>: pkg_yojson
<src/cohttp/*.ml{,i}>: pkg_re.pcre
<src/cohttp/*.ml{,i}>: pkg_uri
# Library ocsigen
"src/ocsigen/ocsigen.cmxs": use_ocsigen
<src/ocsigen/ocsigen.{cma,cmxa}>: oasis_library_ocsigen_byte
<src/ocsigen/*.ml{,i}>: oasis_library_ocsigen_byte
<src/ocsigen/ocsigen.{cma,cmxa}>: oasis_library_ocsigen_native
<src/ocsigen/*.ml{,i}>: oasis_library_ocsigen_native
<src/ocsigen/*.ml{,i}>: use_aws
<src/ocsigen/*.ml{,i}>: pkg_lwt
<src/ocsigen/*.ml{,i}>: pkg_lwt.syntax
<src/ocsigen/*.ml{,i}>: pkg_netstring
<src/ocsigen/*.ml{,i}>: pkg_cryptokit
<src/ocsigen/*.ml{,i}>: pkg_calendar
<src/ocsigen/*.ml{,i}>: pkg_xmlm
<src/ocsigen/*.ml{,i}>: pkg_lwt.unix
<src/ocsigen/*.ml{,i}>: pkg_pcre
<src/ocsigen/*.ml{,i}>: pkg_ocsigenserver
<src/ocsigen/*.ml{,i}>: pkg_yojson
<src/ocsigen/*.ml{,i}>: pkg_re.pcre
<src/ocsigen/*.ml{,i}>: pkg_uri
# Executable backup
"tools/backup.byte": oasis_executable_backup_byte
<tools/*.ml{,i}>: oasis_executable_backup_byte
"tools/backup.byte": oasis_executable_backup_native
<tools/*.ml{,i}>: oasis_executable_backup_native
"tools/backup.byte": pkg_lwt
"tools/backup.byte": pkg_lwt.syntax
"tools/backup.byte": pkg_netstring
"tools/backup.byte": pkg_cryptokit
"tools/backup.byte": pkg_calendar
"tools/backup.byte": pkg_xmlm
"tools/backup.byte": pkg_cohttp
"tools/backup.byte": pkg_str
"tools/backup.byte": pkg_lwt.unix
"tools/backup.byte": pkg_unix
# Executable s3c
"tools/s3c.byte": oasis_executable_s3c_byte
<tools/*.ml{,i}>: oasis_executable_s3c_byte
"tools/s3c.byte": oasis_executable_s3c_native
<tools/*.ml{,i}>: oasis_executable_s3c_native
"tools/s3c.byte": pkg_lwt
"tools/s3c.byte": pkg_lwt.syntax
"tools/s3c.byte": pkg_netstring
"tools/s3c.byte": pkg_cryptokit
"tools/s3c.byte": pkg_calendar
"tools/s3c.byte": pkg_xmlm
"tools/s3c.byte": pkg_cohttp
"tools/s3c.byte": pkg_str
"tools/s3c.byte": pkg_lwt.unix
"tools/s3c.byte": pkg_unix
# Executable ec2sh
"tools/ec2sh.byte": oasis_executable_ec2sh_byte
<tools/*.ml{,i}>: oasis_executable_ec2sh_byte
"tools/ec2sh.byte": oasis_executable_ec2sh_native
<tools/*.ml{,i}>: oasis_executable_ec2sh_native
"tools/ec2sh.byte": pkg_lwt
"tools/ec2sh.byte": pkg_lwt.syntax
"tools/ec2sh.byte": pkg_netstring
"tools/ec2sh.byte": pkg_cryptokit
"tools/ec2sh.byte": pkg_calendar
"tools/ec2sh.byte": pkg_xmlm
"tools/ec2sh.byte": pkg_cohttp
"tools/ec2sh.byte": pkg_str
"tools/ec2sh.byte": pkg_lwt.unix
"tools/ec2sh.byte": pkg_unix
# Executable listdomain
"tools/listdomain.byte": oasis_executable_listdomain_byte
<tools/*.ml{,i}>: oasis_executable_listdomain_byte
"tools/listdomain.byte": oasis_executable_listdomain_native
<tools/*.ml{,i}>: oasis_executable_listdomain_native
"tools/listdomain.byte": pkg_lwt
"tools/listdomain.byte": pkg_lwt.syntax
"tools/listdomain.byte": pkg_netstring
"tools/listdomain.byte": pkg_cryptokit
"tools/listdomain.byte": pkg_calendar
"tools/listdomain.byte": pkg_xmlm
"tools/listdomain.byte": pkg_cohttp
"tools/listdomain.byte": pkg_str
"tools/listdomain.byte": pkg_lwt.unix
"tools/listdomain.byte": pkg_unix
# Executable update
"tools/update.byte": oasis_executable_update_byte
<tools/*.ml{,i}>: oasis_executable_update_byte
"tools/update.byte": oasis_executable_update_native
<tools/*.ml{,i}>: oasis_executable_update_native
"tools/update.byte": pkg_lwt
"tools/update.byte": pkg_lwt.syntax
"tools/update.byte": pkg_netstring
"tools/update.byte": pkg_cryptokit
"tools/update.byte": pkg_calendar
"tools/update.byte": pkg_xmlm
"tools/update.byte": pkg_cohttp
"tools/update.byte": pkg_str
"tools/update.byte": pkg_lwt.unix
"tools/update.byte": pkg_unix
<tools/*.ml{,i}>: pkg_netstring
<tools/*.ml{,i}>: pkg_cohttp
<tools/*.ml{,i}>: pkg_str
<tools/*.ml{,i}>: pkg_unix
# Executable deldomain
<tools/deldomains.{native,byte}>: oasis_executable_deldomain_byte
<tools/*.ml{,i}>: oasis_executable_deldomain_byte
<tools/deldomains.{native,byte}>: oasis_executable_deldomain_native
<tools/*.ml{,i}>: oasis_executable_deldomain_native
<tools/deldomains.{native,byte}>: use_cohttp
<tools/deldomains.{native,byte}>: use_aws
<tools/deldomains.{native,byte}>: pkg_lwt
<tools/deldomains.{native,byte}>: pkg_lwt.syntax
<tools/deldomains.{native,byte}>: pkg_cryptokit
<tools/deldomains.{native,byte}>: pkg_calendar
<tools/deldomains.{native,byte}>: pkg_xmlm
<tools/deldomains.{native,byte}>: pkg_lwt.unix
<tools/deldomains.{native,byte}>: pkg_yojson
<tools/deldomains.{native,byte}>: pkg_re.pcre
<tools/deldomains.{native,byte}>: pkg_uri
<tools/*.ml{,i}>: use_cohttp
<tools/*.ml{,i}>: use_aws
<tools/*.ml{,i}>: pkg_lwt
<tools/*.ml{,i}>: pkg_lwt.syntax
<tools/*.ml{,i}>: pkg_cryptokit
<tools/*.ml{,i}>: pkg_calendar
<tools/*.ml{,i}>: pkg_xmlm
<tools/*.ml{,i}>: pkg_lwt.unix
<tools/*.ml{,i}>: pkg_yojson
<tools/*.ml{,i}>: pkg_re.pcre
<tools/*.ml{,i}>: pkg_uri
# OASIS_STOP
<src/*.ml{,i}>: syntax_camlp4o
<tools/*.ml{,i}>: syntax_camlp4o
